"use strict";(globalThis.webpackChunksignal_desktop=globalThis.webpackChunksignal_desktop||[]).push([[2913],{"./ts/components/conversation/AddNewLines.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AllNewlines:()=>AllNewlines,CustomRenderFunction:()=>CustomRenderFunction,NewlinesInTheMiddle:()=>NewlinesInTheMiddle,NoNewlines:()=>NoNewlines,StartingEndingWithNewlines:()=>StartingEndingWithNewlines,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/react/index.js");var _AddNewLines__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./ts/components/conversation/AddNewLines.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/Conversation/AddNewLines"};var createProps=function(){var overrideProps=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return{renderNonNewLine:overrideProps.renderNonNewLine,text:overrideProps.text||""}};function AllNewlines(){var props=createProps({text:"\n\n\n"});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_AddNewLines__WEBPACK_IMPORTED_MODULE_1__.K,Object.assign({},props))}function StartingEndingWithNewlines(){var props=createProps({text:"\nSome text\n"});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_AddNewLines__WEBPACK_IMPORTED_MODULE_1__.K,Object.assign({},props))}function NewlinesInTheMiddle(){var props=createProps({text:"Some\ntext"});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_AddNewLines__WEBPACK_IMPORTED_MODULE_1__.K,Object.assign({},props))}function NoNewlines(){var props=createProps({text:"Some text"});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_AddNewLines__WEBPACK_IMPORTED_MODULE_1__.K,Object.assign({},props))}function CustomRenderFunction(){var props=createProps({text:"Some text",renderNonNewLine:function(_ref){var theText=_ref.text,key=_ref.key;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",{style:{color:"aquamarine"},children:theText},key)}});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_AddNewLines__WEBPACK_IMPORTED_MODULE_1__.K,Object.assign({},props))}AllNewlines.displayName="AllNewlines",AllNewlines.story={name:"All newlines"},StartingEndingWithNewlines.displayName="StartingEndingWithNewlines",StartingEndingWithNewlines.story={name:"Starting/Ending with Newlines"},NewlinesInTheMiddle.displayName="NewlinesInTheMiddle",NewlinesInTheMiddle.story={name:"Newlines in the Middle"},NoNewlines.displayName="NoNewlines",CustomRenderFunction.displayName="CustomRenderFunction";var __namedExportsOrder=["AllNewlines","StartingEndingWithNewlines","NewlinesInTheMiddle","NoNewlines","CustomRenderFunction"]},"./ts/components/conversation/AddNewLines.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{K:()=>AddNewLines});__webpack_require__("./node_modules/react/index.js");var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js"),defaultRenderNonNewLine=function(_ref){return _ref.text};function AddNewLines(_ref2){var text=_ref2.text,_ref2$renderNonNewLin=_ref2.renderNonNewLine,renderNonNewLine=void 0===_ref2$renderNonNewLin?defaultRenderNonNewLine:_ref2$renderNonNewLin,results=[],FIND_NEWLINES=/\n/g,match=FIND_NEWLINES.exec(text),last=0,count=1;if(!match)return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:renderNonNewLine({text,key:0})});for(;match;){if(last<match.index){var textWithNoNewline=text.slice(last,match.index);count+=1,results.push(renderNonNewLine({text:textWithNoNewline,key:count}))}count+=1,results.push((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("br",{},count)),last=FIND_NEWLINES.lastIndex,match=FIND_NEWLINES.exec(text)}return last<text.length&&(count+=1,results.push(renderNonNewLine({text:text.slice(last),key:count}))),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:results})}}}]);